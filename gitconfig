[user]
	name = Gary Katsevman
	email = git@gkatsev.com
[github]
	user = gkatsev
[core]
	editor = nvim
	excludesfile = ~/.gitignore
[color]
	ui = true
[alias]
	pushf = push --force-with-lease
	pusht = push --follow-tags
	pf = push --force-with-lease
	pt = push --follow-tags
	po = push origin
	pu = push upstream
	puo = push -u origin
	puu = push -u upstream
	pto = push --follow-tags origin
	ptu = push --follow-tags upstream
	branch-name = rev-parse --abbrev-ref HEAD
	bn = rev-parse --abbrev-ref HEAD
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
	new = !"git log master..$(git branch-name) --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --"
	st = status -sb
	diffw = diff --word-diff
	diffc = diff --cached
	diffcw = diff --cached --word-diff
	diffwc = diff --cached --word-diff
	dw = diff --word-diff
	dc = diff --cached
	dcw = diff --cached --word-diff
	dwc = diff --cached --word-diff
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = !git ls-files -v | grep ^h | cut -c 3-
	co = checkout
	cm = commit -m
	standup = log --since yesterday --oneline
	ru = remote update
	rom = rebase origin/main
	rum = rebase upstream/main
	pom = push origin main
	ds = diff --shortstat
	dcs = diff --cached --shortstat
[http]
	sslVerify = false
[gist]
	username = gkatsev
	user = gkatsev
[difftool "diffmerge"]
	cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[mergetool "diffmerge"]
	cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
	trustExitCode = true
[diff]
	tool = opendiff
	tool = opendiff
[merge]
	tool = diffmerge
[merge "npm-merge-driver"]
	name = automatically merge npm lockfiles
	driver = npx npm-merge-driver merge %A %O %B %P
[init]
	defaultBranch = main

[includeIf "hasconfig:remote.*.url:*github.com:xxxxx/**"]
	path = .gitconfig-work
[includeIf "hasconfig:remote.*.url:*github.com/xxxxx/**"]
	path = .gitconfig-work
